Same as previous tutorial for setup.
Code is as follows
import rospy, tf_conversions, tf2_ros, geomtry_msgs.msg, turtlesim.msg
create handle_turtle_pose func (msg, turtlename)
create broadcaster
create transformer
set header.stamp to time now
set frame id to world
set child frame id to turtlename
set translation x and y to msg.x and msg.y 
set translation z to 0
create quat using msg.theta
set x,y,z,w to respective vals
send transform to broadcaster

if name == main
init node (turtle broadcaster)
name = get param
create subscriber with name msg pose and turtle pose
rospy spin

done


Create launch file
<node pkg="turtlesim" type="turtlesim_node" name="sim"/>
      <node pkg="turtlesim" type="turtle_teleop_key" name="teleop" output="screen"/>


    <node name="turtle1_tf2_broadcaster" pkg="learning_tf2" type="turtle_tf2_broadcaster.py" respawn="false" output="screen" >
      <param name="turtle" type="string" value="turtle1" />
    </node>
    <node name="turtle2_tf2_broadcaster" pkg="learning_tf2" type="turtle_tf2_broadcaster.py" respawn="false" output="screen" >
      <param name="turtle" type="string" value="turtle2" /> 
    </node>

call roslaunch learning_tf2 start_demo.launch
check results with rosrun tf tf_echo /world /turtle1

outputs a turtlesim with turtle and prints the direction and orientation of 
turtle.

